user nginx;
worker_processes 1;
error_log 	/var/log/nginx/error.log warn;
pid		/var/run/nginx.pid;
events {
	worker_connections 1024;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;
	sendfile	on;
	keepalive_timeout 65;

	upstream api_server {
        ip_hash;
        server backend:8080;
    }

	geo $valid_location {
		default 0;

		include geoauth.conf;
	}

	
	server {
			listen 80 default_server;
			listen [::]:80 default_server;
			server_name clubhouse.test www.clubhouse.test;
			return 301 https://$host$request_uri;
	}


	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;

		server_name clubhouse.test www.clubhouse.test;

		gzip on;
		gzip_types text/plain text/html text/css text/javascript;
        gzip_min_length 1024;

		ssl_certificate /sslcerts/cert.cert;
		ssl_certificate_key /sslcerts/cert.key;
		ssl_session_timeout 1d;
		ssl_session_cache shared:MozSSL:10m;
		ssl_session_tickets off;

		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
		ssl_prefer_server_ciphers off;

		#-- client certificate support
		# ssl_client_certificate /sslcerts/client-cert-ca.crt;
    	# ssl_verify_client optional;
    	# ssl_verify_depth 2;
		#----

		add_header Strict-Transport-Security "max-age=63072000" always;

		location / {
			root /app;
			index index.html;
			try_files $uri $uri/ /index.html;
		}

		location /api/ {

			proxy_pass http://api_server/;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Upgrade $http_upgrade;
			proxy_cache_bypass $http_upgrade;

			proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;

			#set header X-Auth-Client-Loc to output of geo module
			proxy_set_header X-Auth-Client 	$valid_location;

			# set header X-Auth-Client-Cert if client certificate is verified
			# if ($ssl_client_verify != SUCCESS) {
			#	proxy_set_header X-Auth-Client-Cert	1;
			# }
			
		}		

		error_page 500 502 503 504 /50x.html;
		
		location = /50x.html {
			root /usr/share/nginx/html;
		}
		

	}

}


